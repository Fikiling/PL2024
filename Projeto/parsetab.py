
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = '2DUP 2PONTOS ABS AND BEGIN CARATER CHAR CR DIVIDE_BY_2 DIVISAO DO DROP DUP ELSE EMIT EQUAL FUNCAO GREAT ID IF INF INFEQUAL KEY LESS LOOP LSHIFT MAX MIN MULTIPLICACAO NEG NIP NOT NUM OR OVER POINT PONTOVIRGULA POTENCIA PRINTSTRING REPEAT RESTO ROT RSHIFT SOMA SPACE SPACES SUBTRACAO SUP SUPEQUAL SWAP THEN TUCK UNTIL VARIABLE WHILE XOR ZEROEQUAL ZEROGREAT ZEROLESSinput : input linhainput : emptylinha : elemlinha : 2PONTOS funcao input PONTOVIRGULAlinha : condicionalfuncao : FUNCAOelem : NUMelem : operadorelem : POINTelem : PRINTSTRINGelem : SWAPelem : CRelem : EMITelem : CHAR CARATERelem : SPACESelem : SPACEelem : KEYelem : DUPelem : 2DUPelem : DROPelem : IDoperador : SOMA\n                | SUBTRACAO\n                | DIVISAO\n                | MULTIPLICACAO\n                | RESTO\n                | POTENCIA\n                | DIVIDE_BY_2\n                | EQUAL\n                | SUP\n                | SUPEQUAL\n                | INF\n                | INFEQUAL\n    condicional : IF input ELSE input THEN inputcondicional : IF input THEN inputempty :'
    
_lr_action_items = {'2PONTOS':([0,1,2,3,4,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,],[-36,5,-2,-1,-3,-5,-7,-8,-9,-10,-11,-12,-13,-15,-16,-17,-18,-19,-20,-21,-36,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-36,-6,-14,5,5,-36,-36,-4,5,5,-36,5,]),'NUM':([0,1,2,3,4,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,],[-36,7,-2,-1,-3,-5,-7,-8,-9,-10,-11,-12,-13,-15,-16,-17,-18,-19,-20,-21,-36,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-36,-6,-14,7,7,-36,-36,-4,7,7,-36,7,]),'POINT':([0,1,2,3,4,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,],[-36,9,-2,-1,-3,-5,-7,-8,-9,-10,-11,-12,-13,-15,-16,-17,-18,-19,-20,-21,-36,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-36,-6,-14,9,9,-36,-36,-4,9,9,-36,9,]),'PRINTSTRING':([0,1,2,3,4,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,],[-36,10,-2,-1,-3,-5,-7,-8,-9,-10,-11,-12,-13,-15,-16,-17,-18,-19,-20,-21,-36,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-36,-6,-14,10,10,-36,-36,-4,10,10,-36,10,]),'SWAP':([0,1,2,3,4,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,],[-36,11,-2,-1,-3,-5,-7,-8,-9,-10,-11,-12,-13,-15,-16,-17,-18,-19,-20,-21,-36,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-36,-6,-14,11,11,-36,-36,-4,11,11,-36,11,]),'CR':([0,1,2,3,4,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,],[-36,12,-2,-1,-3,-5,-7,-8,-9,-10,-11,-12,-13,-15,-16,-17,-18,-19,-20,-21,-36,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-36,-6,-14,12,12,-36,-36,-4,12,12,-36,12,]),'EMIT':([0,1,2,3,4,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,],[-36,13,-2,-1,-3,-5,-7,-8,-9,-10,-11,-12,-13,-15,-16,-17,-18,-19,-20,-21,-36,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-36,-6,-14,13,13,-36,-36,-4,13,13,-36,13,]),'CHAR':([0,1,2,3,4,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,],[-36,14,-2,-1,-3,-5,-7,-8,-9,-10,-11,-12,-13,-15,-16,-17,-18,-19,-20,-21,-36,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-36,-6,-14,14,14,-36,-36,-4,14,14,-36,14,]),'SPACES':([0,1,2,3,4,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,],[-36,15,-2,-1,-3,-5,-7,-8,-9,-10,-11,-12,-13,-15,-16,-17,-18,-19,-20,-21,-36,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-36,-6,-14,15,15,-36,-36,-4,15,15,-36,15,]),'SPACE':([0,1,2,3,4,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,],[-36,16,-2,-1,-3,-5,-7,-8,-9,-10,-11,-12,-13,-15,-16,-17,-18,-19,-20,-21,-36,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-36,-6,-14,16,16,-36,-36,-4,16,16,-36,16,]),'KEY':([0,1,2,3,4,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,],[-36,17,-2,-1,-3,-5,-7,-8,-9,-10,-11,-12,-13,-15,-16,-17,-18,-19,-20,-21,-36,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-36,-6,-14,17,17,-36,-36,-4,17,17,-36,17,]),'DUP':([0,1,2,3,4,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,],[-36,18,-2,-1,-3,-5,-7,-8,-9,-10,-11,-12,-13,-15,-16,-17,-18,-19,-20,-21,-36,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-36,-6,-14,18,18,-36,-36,-4,18,18,-36,18,]),'2DUP':([0,1,2,3,4,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,],[-36,19,-2,-1,-3,-5,-7,-8,-9,-10,-11,-12,-13,-15,-16,-17,-18,-19,-20,-21,-36,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-36,-6,-14,19,19,-36,-36,-4,19,19,-36,19,]),'DROP':([0,1,2,3,4,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,],[-36,20,-2,-1,-3,-5,-7,-8,-9,-10,-11,-12,-13,-15,-16,-17,-18,-19,-20,-21,-36,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-36,-6,-14,20,20,-36,-36,-4,20,20,-36,20,]),'ID':([0,1,2,3,4,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,],[-36,21,-2,-1,-3,-5,-7,-8,-9,-10,-11,-12,-13,-15,-16,-17,-18,-19,-20,-21,-36,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-36,-6,-14,21,21,-36,-36,-4,21,21,-36,21,]),'IF':([0,1,2,3,4,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,],[-36,22,-2,-1,-3,-5,-7,-8,-9,-10,-11,-12,-13,-15,-16,-17,-18,-19,-20,-21,-36,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-36,-6,-14,22,22,-36,-36,-4,22,22,-36,22,]),'SOMA':([0,1,2,3,4,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,],[-36,23,-2,-1,-3,-5,-7,-8,-9,-10,-11,-12,-13,-15,-16,-17,-18,-19,-20,-21,-36,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-36,-6,-14,23,23,-36,-36,-4,23,23,-36,23,]),'SUBTRACAO':([0,1,2,3,4,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,],[-36,24,-2,-1,-3,-5,-7,-8,-9,-10,-11,-12,-13,-15,-16,-17,-18,-19,-20,-21,-36,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-36,-6,-14,24,24,-36,-36,-4,24,24,-36,24,]),'DIVISAO':([0,1,2,3,4,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,],[-36,25,-2,-1,-3,-5,-7,-8,-9,-10,-11,-12,-13,-15,-16,-17,-18,-19,-20,-21,-36,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-36,-6,-14,25,25,-36,-36,-4,25,25,-36,25,]),'MULTIPLICACAO':([0,1,2,3,4,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,],[-36,26,-2,-1,-3,-5,-7,-8,-9,-10,-11,-12,-13,-15,-16,-17,-18,-19,-20,-21,-36,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-36,-6,-14,26,26,-36,-36,-4,26,26,-36,26,]),'RESTO':([0,1,2,3,4,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,],[-36,27,-2,-1,-3,-5,-7,-8,-9,-10,-11,-12,-13,-15,-16,-17,-18,-19,-20,-21,-36,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-36,-6,-14,27,27,-36,-36,-4,27,27,-36,27,]),'POTENCIA':([0,1,2,3,4,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,],[-36,28,-2,-1,-3,-5,-7,-8,-9,-10,-11,-12,-13,-15,-16,-17,-18,-19,-20,-21,-36,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-36,-6,-14,28,28,-36,-36,-4,28,28,-36,28,]),'DIVIDE_BY_2':([0,1,2,3,4,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,],[-36,29,-2,-1,-3,-5,-7,-8,-9,-10,-11,-12,-13,-15,-16,-17,-18,-19,-20,-21,-36,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-36,-6,-14,29,29,-36,-36,-4,29,29,-36,29,]),'EQUAL':([0,1,2,3,4,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,],[-36,30,-2,-1,-3,-5,-7,-8,-9,-10,-11,-12,-13,-15,-16,-17,-18,-19,-20,-21,-36,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-36,-6,-14,30,30,-36,-36,-4,30,30,-36,30,]),'SUP':([0,1,2,3,4,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,],[-36,31,-2,-1,-3,-5,-7,-8,-9,-10,-11,-12,-13,-15,-16,-17,-18,-19,-20,-21,-36,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-36,-6,-14,31,31,-36,-36,-4,31,31,-36,31,]),'SUPEQUAL':([0,1,2,3,4,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,],[-36,32,-2,-1,-3,-5,-7,-8,-9,-10,-11,-12,-13,-15,-16,-17,-18,-19,-20,-21,-36,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-36,-6,-14,32,32,-36,-36,-4,32,32,-36,32,]),'INF':([0,1,2,3,4,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,],[-36,33,-2,-1,-3,-5,-7,-8,-9,-10,-11,-12,-13,-15,-16,-17,-18,-19,-20,-21,-36,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-36,-6,-14,33,33,-36,-36,-4,33,33,-36,33,]),'INFEQUAL':([0,1,2,3,4,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,],[-36,34,-2,-1,-3,-5,-7,-8,-9,-10,-11,-12,-13,-15,-16,-17,-18,-19,-20,-21,-36,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-36,-6,-14,34,34,-36,-36,-4,34,34,-36,34,]),'$end':([0,1,2,3,4,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,23,24,25,26,27,28,29,30,31,32,33,34,37,41,42,44,45,46,],[-36,0,-2,-1,-3,-5,-7,-8,-9,-10,-11,-12,-13,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-14,-36,-4,-35,-36,-34,]),'ELSE':([2,3,4,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,37,38,41,42,44,45,46,],[-2,-1,-3,-5,-7,-8,-9,-10,-11,-12,-13,-15,-16,-17,-18,-19,-20,-21,-36,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-14,40,-36,-4,-35,-36,-34,]),'THEN':([2,3,4,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,37,38,40,41,42,43,44,45,46,],[-2,-1,-3,-5,-7,-8,-9,-10,-11,-12,-13,-15,-16,-17,-18,-19,-20,-21,-36,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-14,41,-36,-36,-4,45,-35,-36,-34,]),'PONTOVIRGULA':([2,3,4,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,39,41,42,44,45,46,],[-2,-1,-3,-5,-7,-8,-9,-10,-11,-12,-13,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-36,-6,-14,42,-36,-4,-35,-36,-34,]),'FUNCAO':([5,],[36,]),'CARATER':([14,],[37,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'input':([0,22,35,40,41,45,],[1,38,39,43,44,46,]),'empty':([0,22,35,40,41,45,],[2,2,2,2,2,2,]),'linha':([1,38,39,43,44,46,],[3,3,3,3,3,3,]),'elem':([1,38,39,43,44,46,],[4,4,4,4,4,4,]),'condicional':([1,38,39,43,44,46,],[6,6,6,6,6,6,]),'operador':([1,38,39,43,44,46,],[8,8,8,8,8,8,]),'funcao':([5,],[35,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> input","S'",1,None,None,None),
  ('input -> input linha','input',2,'p_input','analsintax_forth.py',72),
  ('input -> empty','input',1,'p_input_empty','analsintax_forth.py',76),
  ('linha -> elem','linha',1,'p_linha_statement','analsintax_forth.py',80),
  ('linha -> 2PONTOS funcao input PONTOVIRGULA','linha',4,'p_linha_funcao','analsintax_forth.py',84),
  ('linha -> condicional','linha',1,'p_linha_condicional','analsintax_forth.py',90),
  ('funcao -> FUNCAO','funcao',1,'p_funcao','analsintax_forth.py',95),
  ('elem -> NUM','elem',1,'p_elem_NUM','analsintax_forth.py',99),
  ('elem -> operador','elem',1,'p_elem_operador','analsintax_forth.py',105),
  ('elem -> POINT','elem',1,'p_elem_POINT','analsintax_forth.py',109),
  ('elem -> PRINTSTRING','elem',1,'p_elem_PRINTSTRING','analsintax_forth.py',122),
  ('elem -> SWAP','elem',1,'p_elem_SWAP','analsintax_forth.py',126),
  ('elem -> CR','elem',1,'p_elem_CR','analsintax_forth.py',135),
  ('elem -> EMIT','elem',1,'p_elem_EMIT','analsintax_forth.py',140),
  ('elem -> CHAR CARATER','elem',2,'p_elem_CHAR','analsintax_forth.py',149),
  ('elem -> SPACES','elem',1,'p_elem_SPACES','analsintax_forth.py',155),
  ('elem -> SPACE','elem',1,'p_elem_SPACE','analsintax_forth.py',169),
  ('elem -> KEY','elem',1,'p_elem_KEY','analsintax_forth.py',173),
  ('elem -> DUP','elem',1,'p_elem_DUP','analsintax_forth.py',177),
  ('elem -> 2DUP','elem',1,'p_elem_2DUP','analsintax_forth.py',185),
  ('elem -> DROP','elem',1,'p_elem_DROP','analsintax_forth.py',205),
  ('elem -> ID','elem',1,'p_elem_ID','analsintax_forth.py',211),
  ('operador -> SOMA','operador',1,'p_operador','analsintax_forth.py',228),
  ('operador -> SUBTRACAO','operador',1,'p_operador','analsintax_forth.py',229),
  ('operador -> DIVISAO','operador',1,'p_operador','analsintax_forth.py',230),
  ('operador -> MULTIPLICACAO','operador',1,'p_operador','analsintax_forth.py',231),
  ('operador -> RESTO','operador',1,'p_operador','analsintax_forth.py',232),
  ('operador -> POTENCIA','operador',1,'p_operador','analsintax_forth.py',233),
  ('operador -> DIVIDE_BY_2','operador',1,'p_operador','analsintax_forth.py',234),
  ('operador -> EQUAL','operador',1,'p_operador','analsintax_forth.py',235),
  ('operador -> SUP','operador',1,'p_operador','analsintax_forth.py',236),
  ('operador -> SUPEQUAL','operador',1,'p_operador','analsintax_forth.py',237),
  ('operador -> INF','operador',1,'p_operador','analsintax_forth.py',238),
  ('operador -> INFEQUAL','operador',1,'p_operador','analsintax_forth.py',239),
  ('condicional -> IF input ELSE input THEN input','condicional',6,'p_cond_else','analsintax_forth.py',324),
  ('condicional -> IF input THEN input','condicional',4,'p_cond_then','analsintax_forth.py',331),
  ('empty -> <empty>','empty',0,'p_empty','analsintax_forth.py',338),
]
